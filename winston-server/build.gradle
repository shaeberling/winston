apply plugin: 'java'
apply plugin: 'gradle-one-jar'


version = '0.0.1'
sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

configurations {
  checker
}

dependencies {
  compile project(':winston-protos')
  compile project(':winston-libs')
  compile 'org.simpleframework:simple-http:6+'
  compile 'com.google.guava:guava:+'
  compile 'com.google.code.findbugs:jsr305:3+'
  testCompile 'junit:junit:4.12'
  testCompile 'org.mockito:mockito-core:1.10.19'
  testCompile 'com.google.truth:truth:0.28'
  checker 'org.checkerframework:checker:1.9.11'
  checker 'org.checkerframework:jdk8:1.9.11'
}

task checkNullServer(type: JavaCompile) {
   source = fileTree(dir: 'src/main/java', include: '**/*.java')
   destinationDir = file('build/checker-classes-ignore')
   classpath = sourceSets.main.compileClasspath + configurations.checker
   options.debug = true
   options.compilerArgs = [
      "-Xbootclasspath/p:${configurations.checker.asPath}",
      '-processor', 'org.checkerframework.checker.nullness.NullnessChecker',
      '-implicit:class',
      '-AprintErrorStack'
   ]
}

task checkLocksServer(type: JavaCompile) {
   source = fileTree(dir: 'src/main/java', include: '**/*.java')
   destinationDir = file('build/checker-classes-ignore')
   classpath = sourceSets.main.compileClasspath + configurations.checker
   options.debug = true
   options.compilerArgs = [
      "-Xbootclasspath/p:${configurations.checker.asPath}",
      '-processor', 'org.checkerframework.checker.lock.LockChecker',
      '-implicit:class',
      '-AprintErrorStack'
   ]
}

jacocoTestReport {
  dependsOn test
  sourceDirectories = project.files(sourceSets.main.allSource.srcDirs)
  classDirectories =  project.files(sourceSets.main.output)
  reports {
    xml.enabled true
  }
}

task nodeDaemon (type: OneJar) {
  mainClass = 'com.s13g.winston.node.NodeDaemon'
  archiveName = 'winston-node-daemon.jar'
  // Workaround for https://github.com/rholder/gradle-one-jar/issues/25
  manifestFile = file('etc/MANIFEST-node.MF')
  // manifest {
  //   attributes 'Implementation-Title': 'Winston Node Daemon',
  //              'Implementation-Version': version,
  //              'Timestamp': String.valueOf(System.currentTimeMillis())
  // }
  useStable = false
}

task masterDaemon (type: OneJar) {
  mainClass = 'com.s13g.winston.master.MasterDaemon'
  archiveName 'winston-master-daemon.jar'
  // Workaround for https://github.com/rholder/gradle-one-jar/issues/25
  manifestFile = file('etc/MANIFEST-master.MF')
  // manifest {
  //   attributes 'Implementation-Title': 'Winston Master Daemon',
  //              'Implementation-Version': version,
  //              'Timestamp': String.valueOf(System.currentTimeMillis())
  // }
  useStable = false
}

task sauronDaemon (type: OneJar) {
  mainClass = 'com.s13g.winston.tools.sauron.SauronDaemon'
  archiveName 'winston-sauron-daemon.jar'
  // Workaround for https://github.com/rholder/gradle-one-jar/issues/25
  manifestFile = file('etc/MANIFEST-sauron.MF')
  // manifest {
  //   attributes 'Implementation-Title': 'Winston Sauron Daemon',
  //              'Implementation-Version': version,
  //              'Timestamp': String.valueOf(System.currentTimeMillis())
  // }
  useStable = false
}

