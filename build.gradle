// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.0.0'
        classpath 'com.github.rholder:gradle-one-jar:1.0.4'
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.0.1'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
  repositories {
    jcenter()
  }
}

// To create a gradle wrapper.
task wrapper(type: Wrapper) {
    gradleVersion = '2.2'
}


// Code Coverage and reporting.
// The coveralls gradle plugin cannot handle multiple projects, so we have to flatten
// the reports here in order to get coverage for all subprojects.

apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'

// Exclude the android project from coverage for now.
def publishedProjects = subprojects.findAll {
  (it.path != ':winston-android' && it.path != ':winston-android-wear')
}


subprojects { proj ->
    apply plugin: 'jacoco'

    task jacocoTestReportFoo(type: JacocoReport, dependsOn: "testDebug") {
        reports {
            xml.enabled = true // coveralls plugin depends on xml format report
            html.enabled = true
        }
    }
}

task jacocoRootReport(type: JacocoReport, group: 'Coverage reports') {
    group = 'Reporting'
    description = 'Aggregate reports for all Winston projects'
    dependsOn(publishedProjects.jacocoTestReportFoo)

    additionalSourceDirs = files('winston-server/src/main/java') + files('winston-libs/src/main/java')
    sourceDirectories = files('winston-server/src/main/java') + files('winston-libs/src/main/java')
    classDirectories = files('winston-server/build/intermediates/classes/debug') + files('winston-libs/build/intermediates/classes/debug')
    executionData = files(publishedProjects.jacocoTestReportFoo.executionData)

    reports {
        html.enabled = true
        xml.enabled = true
    }

    doFirst {
        executionData = files(executionData.findAll { it.exists() })
    }
}

coveralls {
    sourceDirs = files('winston-server/src/main/java').flatten() + files('winston-libs/src/main/java').flatten()
    jacocoReportPath = "${buildDir}/reports/jacoco/jacocoRootReport/jacocoRootReport.xml"
}
