apply plugin: 'java'

version = '0.0.1'
sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

configurations {
  checker
}

dependencies {
    compile 'org.apache.logging.log4j:log4j-core:2.1'
    compile 'org.apache.logging.log4j:log4j-api:2.1'
    compile 'com.google.guava:guava:+'
    compile 'com.google.code.findbugs:jsr305:3+'
    compile 'org.json:json:20160810'
    compile 'org.jdom:jdom:2.0.2'
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.10.19'
    testCompile 'com.google.truth:truth:0.28'
    checker 'org.checkerframework:checker:1.9.11'
    checker 'org.checkerframework:jdk8:1.9.11'
}

task checkNullLibs(type: JavaCompile) {
   source = fileTree(dir: 'src/main/java', include: '**/*.java')
   destinationDir = file('build/checker-classes-ignore')
   classpath = sourceSets.main.compileClasspath + configurations.checker
   options.debug = true
   options.compilerArgs = [
      "-Xbootclasspath/p:${configurations.checker.asPath}",
      '-processor', 'org.checkerframework.checker.nullness.NullnessChecker',
      '-implicit:class',
      '-AprintErrorStack'
   ]
}

task checkLocksLibs(type: JavaCompile) {
   source = fileTree(dir: 'src/main/java', include: '**/*.java')
   destinationDir = file('build/checker-classes-ignore')
   classpath = sourceSets.main.compileClasspath + configurations.checker
   options.debug = true
   options.compilerArgs = [
      "-Xbootclasspath/p:${configurations.checker.asPath}",
      '-processor', 'org.checkerframework.checker.lock.LockChecker',
      '-implicit:class',
      '-AprintErrorStack'
   ]
}

jacocoTestReport {
  dependsOn test
  sourceDirectories = project.files(sourceSets.main.allSource.srcDirs)
  classDirectories =  project.files(sourceSets.main.output)
  reports {
    xml.enabled true
  }
}
